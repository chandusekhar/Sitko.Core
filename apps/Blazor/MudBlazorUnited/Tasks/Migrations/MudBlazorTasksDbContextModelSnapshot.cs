// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MudBlazorUnited.Tasks;
using MudBlazorUnited.Tasks.Demo;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MudBlazorUnited.Tasks.Migrations
{
    [DbContext(typeof(MudBlazorTasksDbContext))]
    partial class MudBlazorTasksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MudBlazorUnited.Tasks.MudBlazorBaseTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ExecuteDateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ExecuteDateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("LastActivityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<int>("TaskStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tasks", (string)null);

                    b.HasDiscriminator<string>("Type").HasValue("MudBlazorBaseTask");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MudBlazorUnited.Tasks.Demo.LoggingTask", b =>
                {
                    b.HasBaseType("MudBlazorUnited.Tasks.MudBlazorBaseTask");

                    b.Property<LoggingTaskConfig>("Config")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("Config");

                    b.Property<LoggingTaskResult>("Result")
                        .HasColumnType("jsonb")
                        .HasColumnName("Result");

                    b.ToTable("Tasks", (string)null);

                    b.HasDiscriminator().HasValue("LoggingTask");
                });
#pragma warning restore 612, 618
        }
    }
}
